prototype(DIU.Grid:Content.Structure.Grid.Column.Two) < prototype(Neos.Neos:ContentComponent) {

    renderer = DIU.Grid:Components.Molecule.Grid.Column.Two {

        classNames = ''

        @context.desktopLayout = ${String.split(q(node).property('desktopLayout'), '-')}
        @context.mobileLayout = ${String.split(q(node).property('mobileLayout'), '-')}
        @context.tabletLayout = ${String.split(q(node).property('tabletLayout'), '-')}

        addTopSpacing = ${q(node).property('addTopSpacing')}

        addBottomSpacing = ${q(node).property('addBottomSpacing')}

        column0 = Neos.Neos:ContentCollection {
            nodePath = 'column0'
            attributes.class = 'fullheight-stretch'
        }
        column1 = Neos.Neos:ContentCollection {
            nodePath = 'column1'
            attributes.class = 'fullheight-stretch'
        }

        columnData = Neos.Fusion:RawArray{
            xs = Neos.Fusion:RawArray {
                offset = ${mobileLayout[0]}
                col0 = ${mobileLayout[1]}
                col1 = ${mobileLayout[2]}
            }
            md = Neos.Fusion:RawArray {
                offset = ${tabletLayout[0]}
                col0 = ${tabletLayout[1]}
                col1 = ${tabletLayout[2]}
            }
            lg = Neos.Fusion:RawArray {
                offset = ${desktopLayout[0]}
                col0 = ${desktopLayout[1]}
                col1 = ${desktopLayout[2]}
            }
        }

        columnWidth0 = ${DIU.Grid.assembleClassNames(this.columnData, 0)}
        columnWidth1 = ${DIU.Grid.assembleClassNames(this.columnData, 1)}
    }

}
